{% comment %}
Create form populated by collection's product types and product tags

Accepts:
- collection: {Object} Collection Liquid object (required)

Usage:
{% render 'collection-filter', collection: collection %}
{% endcomment %}
{% assign separator = settings.filter__separator %}

{% comment %}Sanitize input to be case insensitive and strip additional spaces and remove repeats{% endcomment %}
{% assign categories = settings.filter__prefix | remove: ' ' | downcase | split: ',' | uniq %}

<aside class="collection__filter filter">

    <section class="filter__selected-tags"></section>

    <form class="filter__form">
        <h2 class="filter__title">Filter</h2>
        <ul class="filter__categories">
            {% for category in categories %}
                {% render 'filter-category', tags: collection.all_tags, category: category %}
            {% endfor %}
        </ul>

        <input type="submit" value="Filter products" class="filter__submit btn btn--default">

    </form>
    
</aside>

<script>

    {% comment %} 
        Populate tag counts------------------------------------------------------
    {% endcomment %}
    const tagCounts = document.querySelectorAll('.category__tag-count');

    tagCounts.forEach(tag => {
        const allProducts = {{collection.all_products | json}};
        const matchingProducts = allProducts.filter(product => product.tags.includes(tag.dataset.tag));
        tag.innerText = `(${matchingProducts.length})`;
    });



    {% comment %}
        Handle form submit--------------------------------------------------------
    {% endcomment %}
    const form = document.querySelector('.filter__form');
    const tags = document.querySelectorAll('.category__checkbox');


    form.addEventListener('submit', (e) => {
        e.preventDefault();
        window.location.href = generatePath();
    });

    
    {% comment %}
        Create a new path with the selected product tags
        @return {String} Path containing handles of selected tags and the selected sort option
    {% endcomment %}
    function generatePath() {
        const selectedTags = [...tags].filter(tag => tag.checked);
        const joinedTagHandles = selectedTags.map(tag => tag.dataset.handle).join('+');
        const collectionPath = '{{collection.url}}';
        const selectedSort = '{{collection.sort_by}}';
        let result = collectionPath.concat('/', joinedTagHandles);
        if (selectedSort) result = result.concat('?sort_by=', selectedSort);
        return result;
    }

</script>